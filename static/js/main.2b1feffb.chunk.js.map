{"version":3,"sources":["components/intro/clock.tsx","components/intro/ment.tsx","components/intro/intro.tsx","components/navbar/fixednavbar.tsx","components/about.tsx","components/skills.tsx","components/works.tsx","components/contact.tsx","components/footer.tsx","App.tsx","serviceWorker.js","index.js"],"names":["Clock","props","timerID","state","date","Date","this","setInterval","tick","clearInterval","setState","id","toLocaleTimeString","React","Component","Ment","text","position","curPosition","length","str","substring","Intro","className","FixedNavBar","Navbar","collapseOnSelect","expand","variant","fixed","Container","Brand","href","Toggle","aria-controls","Collapse","Nav","Item","Link","type","About","Skills","src","alt","width","height","Works","Contact","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2b1feffb.chunk.js","sourcesContent":["import React from 'react';\r\nimport './clock.css';\r\ninterface Props {\r\n  \r\n}\r\n\r\ninterface State {\r\n  date : Date\r\n}\r\n\r\nexport default class Clock extends React.Component<Props, State> {\r\n  timerID: number;\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {date: new Date()};\r\n    this.timerID = 0;\r\n  }\r\n\r\n  /**\r\n   * 생명주기 메소드 (Lifecycle method)\r\n   * componentDidMount(): 컴포넌트 출력물이 DOM에 렌더링 된 후에 실행.\r\n   */\r\n  componentDidMount() {\r\n    // 수동으로 클래스에 부가적인 필드 추가\r\n    this.timerID = setInterval(\r\n      () => this.tick(), 1000\r\n    );\r\n  }\r\n  /**\r\n   * 생명주기 메소드\r\n   * componenetWillUnmount(): 컴포넌트가 돔에서 삭제된다면 실행.\r\n   */\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerID);\r\n  }\r\n\r\n  /**\r\n   * 일반 메소드\r\n   * tick(): 1초마다 State를 갱신해 시간을 렌더링한다.\r\n   */\r\n  tick() {\r\n    this.setState({\r\n      date: new Date()\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"timeStringHeaderWrap\">\r\n        <h2 id=\"timeStringHeader\">{this.state.date.toLocaleTimeString()}</h2>\r\n      </div>\r\n    );\r\n\r\n  }\r\n}","import React from 'react';\r\nimport './ment.css';\r\n\r\ninterface Props {\r\n  text: string\r\n}\r\n\r\ninterface State {\r\n  text: string,\r\n  position: number\r\n}\r\n\r\nexport default class Ment extends React.Component<Props, State> {\r\n  \r\n  timerID: number;\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      text: \"\",\r\n      position: 0\r\n    };\r\n    this.timerID = 0;\r\n  }\r\n  /**\r\n   * 생명주기 메소드 (Lifecycle method)\r\n   * componentDidMount(): 컴포넌트 출력물이 DOM에 렌더링 된 후에 실행.\r\n   */\r\n  componentDidMount() {\r\n    // 수동으로 클래스에 부가적인 필드 추가\r\n    this.timerID = setInterval(\r\n      () => this.tick(), 200\r\n    );\r\n  }\r\n  /**\r\n   * 생명주기 메소드\r\n   * componenetWillUnmount(): 컴포넌트가 돔에서 삭제된다면 실행.\r\n   */\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerID);\r\n  }\r\n\r\n  /**\r\n   * 일반 메소드\r\n   * tick(): 1초마다 State를 갱신해 시간을 렌더링한다.\r\n   */\r\n  tick() {\r\n    const curPosition = this.state.position;\r\n    if(curPosition > this.props.text.length) {\r\n     /* this.setState({\r\n        position: 0,\r\n      })*/\r\n      clearInterval(this.timerID);\r\n    }else {\r\n      const str = this.props.text.substring(0,this.state.position);\r\n      this.setState({\r\n        text: str,\r\n        position: curPosition + 1\r\n      });\r\n    }\r\n    \r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"introMent\">\r\n        {this.state.text}\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport Clock from './clock';\r\nimport Ment from './ment';\r\n\r\nimport './intro.css';\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\ninterface State {\r\n  \r\n}\r\n\r\nexport default class Intro extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"intro\">\r\n        <div className=\"intro-wrap\">\r\n          <Ment text=\"Welcome !\"/>\r\n          <Clock />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport {Navbar, Container, Nav} from 'react-bootstrap';\r\n\r\nimport './fixednavbar.css'\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\ninterface State {\r\n\r\n}\r\n\r\nexport default class FixedNavBar extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Navbar className=\"navbar\" collapseOnSelect expand=\"md\" variant=\"dark\" fixed=\"top\">\r\n          <Container>\r\n            <Navbar.Brand href=\"#root\">P J H</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse className=\"justify-content-end\" id=\"responsive-navbar-nav\">\r\n              <Nav className=\"justify-content-center\">\r\n                <Nav.Item>\r\n                  <Nav.Link href=\"#about\">ABOUT</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                  <Nav.Link href=\"#skills\">SKILLS</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                  <Nav.Link href=\"#contact\">CONTACT</Nav.Link>\r\n                </Nav.Item>\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n          </Container>\r\n            \r\n          <script type=\"javascript\">\r\n            document\r\n          </script>\r\n        </Navbar>\r\n      </>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport {Container, Row, Col, Card} from 'react-bootstrap';\r\nimport './common.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '@fortawesome/fontawesome-free';\r\n\r\ninterface Props{\r\n\r\n}\r\ninterface State{\r\n\r\n\r\n}\r\n\r\nexport default class About extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"about\" className=\"about-wrap\">\r\n        <div>\r\n          <h1 className=\"display-1 font-weight-bold text-center\">About</h1>\r\n          <p id=\"about-p\" className=\"mt-5 text-center text-break font-weight-normal\">\r\n            저는 프론트엔드를 공부하고 있습니다. <br />\r\n            풀스택 개발자를 목표로 하고 있습니다. <br />\r\n            가장 흥미 있는 분야는 웹 입니다. <br />\r\n            React와 TypeScript를 공부 중입니다. <br />\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport './common.css'\r\ninterface Props{}\r\ninterface State{}\r\n\r\nexport default class Skills extends React.Component<Props, State> {\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"skills\" className=\"skills-wrap\">\r\n        <div>\r\n          <h1 className=\"display-1 font-weight-bold text-center\">Skills</h1>\r\n          <div className=\"row mt-5\">\r\n            <div className=\"col-xl\">\r\n              <div className=\"media\">\r\n                <img src=\"/img/c.png\" className=\"mr-3\" alt=\"...\" width=\"100px\" height=\"100px\" />\r\n                <div className=\"media-body\">\r\n                  <h5 className=\"mt-0\">C</h5>\r\n                  <p>CLI 멀티쓰레딩 소켓통신 FTP서버 만들어봤습니다.</p>\r\n                  <div>\r\n                    <span className=\"badge badge-primary\">좋음</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-xl\">\r\n              <div className=\"media\">\r\n                <img src=\"/img/cpp.png\" className=\"mr-3\" alt=\"...\" width=\"100px\" height=\"100px\" />\r\n                <div className=\"media-body\">\r\n                  <h5 className=\"mt-0\">C++</h5>\r\n                  <p>스택, 큐, 링크드 리스트, 트리 구현\r\n                  STL(vector, map, queue) 사용경험 있습니다.\r\n                  </p>\r\n                  <div>\r\n                    <span className=\"badge badge-primary\">좋음</span>\r\n                    <span className=\"badge badge-success\">주언어</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-xl\">\r\n              <div className=\"media\">\r\n                <img src=\"/img/java.png\" className=\"mr-3\" alt=\"...\" width=\"100px\" height=\"100px\" />\r\n                <div className=\"media-body\">\r\n                  <h5 className=\"mt-0\">Java</h5>\r\n                  <p>JavaFX를 사용한 GUI 프로그래밍 경험이 있습니다.\r\n                  </p>\r\n                  <div>\r\n                    <span className=\"badge badge-danger\">사용한지 오래됨</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row mt-5\">\r\n            <div className=\"col-xl\">\r\n              <div className=\"media\">\r\n                <img src=\"/img/javascript.png\" className=\"mr-3\" alt=\"...\" width=\"100px\" height=\"100px\" />\r\n                <div className=\"media-body\">\r\n                  <h5 className=\"mt-0\">Javascript</h5>\r\n                  <p>Vanila JavaScript 사용후 ES5, ES6, TypeScript 학습중입니다.</p>\r\n                  <div>\r\n                    <span className=\"badge badge-warning\">아직 미숙</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-xl\">\r\n              <div className=\"media\">\r\n                <img src=\"/img/react.png\" className=\"mr-3\" alt=\"...\" width=\"100px\" height=\"100px\" />\r\n                <div className=\"media-body\">\r\n                  <h5 className=\"mt-0\">React</h5>\r\n                  <p> 현재 사이트가 React로 구현한 첫 결과물입니다.\r\n                  </p>\r\n                  <div>\r\n                    <span className=\"badge badge-warning\">아직 미숙</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-xl\">\r\n              <div className=\"media\">\r\n                <img src=\"/img/php.jpg\" className=\"mr-3\" alt=\"...\" width=\"100px\" height=\"100px\" />\r\n                <div className=\"media-body\">\r\n                  <h5 className=\"mt-0\">PHP</h5>\r\n                  <p>PHP기반 프레임워크 CodeIgniter, Laravel로 백엔두 구현 경험 있습니다.\r\n                  </p>\r\n                  <div>\r\n                    <span className=\"badge badge-primary\">좋음</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n//import './works.css';\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\ninterface State {\r\n\r\n}\r\n\r\nexport default class Works extends React.Component<Props, State> {\r\n  render() {\r\n    return (\r\n      <>\r\n\r\n      </>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\ninterface State {\r\n\r\n}\r\n\r\nexport default class Contact extends React.Component<Props, State> {\r\n  render() {\r\n    return (\r\n      <>\r\n      <div id=\"contact\" className=\"common-wrap\">\r\n        <div>\r\n          <div>\r\n            <h1 className=\"display-1 font-weight-bold text-center\">Contact</h1>\r\n          </div>\r\n          <br></br>\r\n          <div className=\"mt-20\">\r\n            <h4>EMAIL : jhpung0629@gmail.com</h4>\r\n          </div>\r\n          <br></br>\r\n          <div className=\"mt-20\">\r\n            <h4>H . P : 010-3786-3607</h4>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport './common.css';\r\ninterface Props {\r\n\r\n}\r\n\r\ninterface State {\r\n\r\n}\r\n\r\nexport default class Footer extends React.Component<Props, State> {\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"footer\">\r\n          <div className=\"container text-center\">\r\n            <h5 id=\"copyright\">Copyright@2019 JungHyeonPung all right reserved.</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}","import React from 'react';\nimport Intro from './components/intro/intro';\nimport FixedNavBar from './components/navbar/fixednavbar';\nimport About from './components/about';\nimport Skills from './components/skills';\nimport Works from './components/works';\nimport Contact from './components/contact';\nimport Footer from './components/footer';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { array } from 'prop-types';\n\ninterface Props {\n\n}\n\ninterface State {\n\n}\n\nexport default class App extends React.Component<Props, State> {\n  render() {\n    return (\n      <>\n        <FixedNavBar></FixedNavBar>\n        <Intro></Intro>\n        <div className=\"container\">\n          <About></About>\n          <Skills></Skills>\n          <Works></Works>\n          <Contact></Contact>\n        </div>\n        <Footer></Footer>\n\n        \n      </>\n    );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}